<%= form_with(model: transacao) do |form| %>
  <% if transacao.errors.any? %>
    <div style="color: red">
      <h2><%= pluralize(transacao.errors.count, "error") %> prohibited this transacao from being saved:</h2>

      <ul>
        <% transacao.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div>
    <%= form.label :tipo, style: "display: block" %>
    <%= form.select :tipo, [['Receita'], ['Despesa']], {}, { id: 'tipo-select', class: "form-control" } %>
  </div>

  <div id="categoria-select-container">
    <%= form.label :categoria, style: "display: block" %>
    <%= form.select :categoria, [], {}, { id: 'categoria-select', class: "form-control" } %>
  </div>

  <div>
    <%= form.label :valor, style: "display: block" %>
    <%= form.text_field :valor, class:"form-control" %>
  </div>

  <div>
    <%= form.label :dataHora, style: "display: block" %>
    <%= form.datetime_field :dataHora, class:"form-control" %>
  </div>

  <div>
    <%= form.label :cliente_id, style: "display: block" %>
    <%= form.text_field :cliente_id, class:"form-control" %>
  </div>

  <div>
    <%= form.label :account_id, style: "display: block" %>
    <%= form.text_field :account_id, class:"form-control" %>
  </div>

  <div class="form-group text-center mt-4">
    <%= form.submit class: "btn btn-success" %>
  </div>
<% end %>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const tipoSelect = document.getElementById('tipo-select');
    const categoriaSelect = document.getElementById('categoria-select');
    const categoriaSelectContainer = document.getElementById('categoria-select-container');

    // Opções de categoria para Despesa e Receita
    const despesaOptions = [
      ['Transporte'],
      ['Alimentação'],
      ['Educação'],
      ['Saúde'],
      ['Aluguel'],
      ['Condomínio'],
      ['Outros']
    ];

    const receitaOptions = [
      ['Salário'],
      ['Investimento'],
      ['Renda Extra'],
      ['Outros']
    ];

    // Função para atualizar as opções do select de categoria
    function updateCategoriaOptions() {
      const selectedTipo = tipoSelect.value;
      let options = [];

      if (selectedTipo === 'Despesa') {
        options = despesaOptions;
      } else if (selectedTipo === 'Receita') {
        options = receitaOptions;
      }

      // Limpa as opções atuais
      categoriaSelect.innerHTML = '';

      // Adiciona as novas opções
      options.forEach(option => {
        const [label, value = label] = option;
        const optionElement = document.createElement('option');
        optionElement.textContent = label;
        optionElement.value = value;
        categoriaSelect.appendChild(optionElement);
      });
    }

    // Chamada inicial para definir as opções base no valor inicial do tipo
    updateCategoriaOptions();

    // Event listener para detectar mudança no select de tipo e atualizar as opções de categoria
    tipoSelect.addEventListener('change', updateCategoriaOptions);
  });
</script>
